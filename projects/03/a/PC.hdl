// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
        Xor16(a=in, b=in, out=zero);
        One16(out=one);
        Mux16(a=in, b=zero, sel=reset, out=rin);

        // Figure out whether the register is changing
        Or(a=reset, b=load, out=loadreg1);
        Or(a=loadreg1, b=inc, out=loadreg);

        // Figure out whether we should be reading the
        // incremented value or another
        Not(in=reset, out=notreset);
        Not(in=load, out=notload);
        And(a=notreset, b=notload, out=not2);
        And(a=not2, b=inc, out=rinc);

        Mux16(a=rin, b=added, sel=rinc, out=rin2);
        Register(in=rin2, load=loadreg, out=rout);

        // This one connects back to the mux before the input
        // of the register.
        Add16(a=rout, b=one, out=added);

        // Copy to the output
        Or16(a=rout, b=zero, out=out);
}
